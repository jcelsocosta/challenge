version: '3'
      
services:
  postgres:
    image: postgres:14-alpine
    container_name: challengedb
    labels:
      - "traefik.http.routers.challengedb.rule=Host(`challengedb.codeinterviewstep.com`)" # Define a regra de roteamento para o serviço
      - "traefik.http.services.challengedb.loadbalancer.server.port=5432"
    environment:
      POSTGRES_DB: challengedb
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: admin
    volumes:
      - pgdata:/var/lib/postgresql/data
  backend:
    container_name: backend-rest
    build:
      context: ./backend/
      dockerfile: Dockerfile
    image: backend-rest
    labels:
      - "traefik.http.routers.backend.rule=Host(`backend.codeinterviewstep.com`)" # Define a regra de roteamento para o serviço
      - "traefik.http.services.backend.loadbalancer.server.port=4001"
    environment:
      - TOKEN_THE_MOVIE_DB=${TOKEN_THE_MOVIE_DB}
    depends_on:
      - postgres
    restart: always
  ui:
    container_name: ui
    build:
      context: ./ui/
      dockerfile: Dockerfile
    image: ui
    ports:
      - 4300:4300
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.ui.rule=Host(`codeinterviewstep.com`)" # Define a regra de roteamento para o serviço
      - "traefik.http.routers.ui-www.rule=Host(`www.codeinterviewstep.com`)" # Regra para www.codeinterviewstep.com
      - "traefik.http.services.ui.loadbalancer.server.port=4300"
    restart: always
volumes:
  pgdata: